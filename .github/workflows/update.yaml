name: update

permissions:
  contents: write

on:
  schedule:
    # Runs at 00:00AM UTC
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      packages:
        type: string
        required: false
        description: --package
      update:
        type: boolean
        required: false
        description: --update
      update-source:
        type: boolean
        required: false
        description: --update-source
      upload:
        type: boolean
        required: false
        description: --upload
      commit:
        type: boolean
        required: false
        description: --commit
      rebuild:
        type: boolean
        required: false
        description: --rebuild

jobs:
  update-packages:
    name: Update packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip

      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Cache Rust toolchain
        uses: actions/cache@v3
        id: cache-rust-toolchain
        with:
          path: ~/.rustup
          key: rust-toolchain

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        if: ${{ steps.cache-rust-toolchain.outputs.cache-hit != 'true' }}
        with:
          toolchain: stable
          profile: minimal

      - name: Update packages
        env:
          OBS_TOKEN: ${{ secrets.OBS_TOKEN }}
          OBS_PROJECT: home:loichyan
        run: |
          ./scripts/obs-ci.py \
            $([[ "${{ inputs.update }}" == false ]] || echo --update) \
            $([[ "${{ inputs.update-source }}" == false ]] || echo --update-source) \
            $([[ "${{ inputs.upload }}" == false ]] || echo --upload) \
            $([[ "${{ inputs.commit }}" == false ]] || echo --commit) \
            $([[ "${{ inputs.rebuild }}" == false ]] || echo --rebuild) \
            $([[ -z "${{ inputs.packages }}" ]] \
              && echo --all \
              || for p in $(tr " " "\n"); do echo -p $p; done <<<"${{ inputs.packages }}" )
